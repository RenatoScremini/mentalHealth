{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renas\\\\Escritorio\\\\Mobile Aplication Devlopment\\\\Project\\\\mentalHealth\\\\mentalHealth\\\\src\\\\components\\\\MotivationalQuote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MotivationalQuote = () => {\n  _s();\n  const [quote, setQuote] = useState(null);\n  useEffect(() => {\n    const fetchQuote = async () => {\n      try {\n        const response = await fetch(\"https://raw.githubusercontent.com/well300/quotes-api/refs/heads/main/quotes.json\");\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const randomQuote = data[Math.floor(Math.random() * data.length)];\n        setQuote(randomQuote);\n      } catch (error) {\n        console.error(\"Error fetching quotes:\", error);\n        setQuote({\n          quote: \"Failed to load quote.\",\n          author: \"Error\"\n        });\n      }\n    };\n    fetchQuote();\n  }, []);\n  const changeQuote = async () => {\n    try {\n      const response = await fetch(\"https://raw.githubusercontent.com/well300/quotes-api/refs/heads/main/quotes.json\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      let newQuote;\n      let attempts = 0;\n      do {\n        newQuote = data[Math.floor(Math.random() * data.length)];\n        attempts++;\n      } while (quote && newQuote.quote === quote.quote && attempts < 10);\n      setQuote(newQuote);\n    } catch (error) {\n      console.error(\"Error fetching quotes:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Today's Motivational Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), quote ? /*#__PURE__*/_jsxDEV(\"blockquote\", {\n      className: \"quote\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", quote.quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [\"- \", quote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"change-quote-button\",\n      onClick: changeQuote,\n      children: \"Show Another Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(MotivationalQuote, \"pHUr4/1SkZ+pqek8O0wcMu7nkro=\");\n_c = MotivationalQuote;\nexport default MotivationalQuote;\nvar _c;\n$RefreshReg$(_c, \"MotivationalQuote\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MotivationalQuote","_s","quote","setQuote","fetchQuote","response","fetch","ok","Error","status","data","json","randomQuote","Math","floor","random","length","error","console","author","changeQuote","newQuote","attempts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/renas/Escritorio/Mobile Aplication Devlopment/Project/mentalHealth/mentalHealth/src/components/MotivationalQuote.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst MotivationalQuote = () => {\r\n  const [quote, setQuote] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchQuote = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://raw.githubusercontent.com/well300/quotes-api/refs/heads/main/quotes.json\"\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        const randomQuote = data[Math.floor(Math.random() * data.length)];\r\n        setQuote(randomQuote);\r\n      } catch (error) {\r\n        console.error(\"Error fetching quotes:\", error);\r\n        setQuote({ quote: \"Failed to load quote.\", author: \"Error\" });\r\n      }\r\n    };\r\n\r\n    fetchQuote();\r\n  }, []);\r\n\r\n  const changeQuote = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://raw.githubusercontent.com/well300/quotes-api/refs/heads/main/quotes.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      let newQuote;\r\n      let attempts = 0;\r\n      do {\r\n        newQuote = data[Math.floor(Math.random() * data.length)];\r\n        attempts++;\r\n      } while (quote && newQuote.quote === quote.quote && attempts < 10);\r\n\r\n      setQuote(newQuote);\r\n    } catch (error) {\r\n      console.error(\"Error fetching quotes:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quote-container\">\r\n      <h2>Today's Motivational Quote</h2>\r\n      {quote ? (\r\n        <blockquote className=\"quote\">\r\n          <p>\"{quote.quote}\"</p>\r\n          <footer>- {quote.author}</footer>\r\n        </blockquote>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n      <button className=\"change-quote-button\" onClick={changeQuote}>\r\n        Show Another Quote\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MotivationalQuote;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}